import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const { data: compositions } = trpc.useQuery(["compositions.getAll"]);

  return (
    <>
      <Head>
        <title>Compositions</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <h1>Compositions</h1>
        <ul>
          {compositions?.map((composition) => {
            return (
              <li
                style={{
                  border: "1px solid black",
                }}
                key={composition.id}
              >
                <h3>{composition.name}</h3>
                <p>{composition.description}</p>
                <h4>Tracks in composition:</h4>
                {composition.tracks.map((track) => {
                  return (
                    <ul
                      style={{
                        border: "1px solid black",
                      }}
                      key={track.id}
                    >
                      <li>{track.name}</li>
                    </ul>
                  );
                })}
              </li>
            );
          })}
        </ul>
      </div>
    </>
  );
};

export default Home;

type TechnologyCardProps = {
  name: string;
  description: string;
  documentation: string;
};

const TechnologyCard = ({
  name,
  description,
  documentation,
}: TechnologyCardProps) => {
  return (
    <section className={styles.card}>
      <h2 className={styles.cardTitle}>{name}</h2>
      <p className={styles.cardDescription}>{description}</p>
      <a
        className={styles.cardDocumentation}
        href={documentation}
        target="_blank"
        rel="noreferrer"
      >
        Documentation
      </a>
    </section>
  );
};
